name: Test

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - ".github/workflows/docs.yml"
      - ".github/workflows/wheels*"
      - ".gitmodules"
      - "docs/**"
      - "wheels/**"
  pull_request:
    paths-ignore:
      - ".github/workflows/docs.yml"
      - ".github/workflows/wheels*"
      - ".gitmodules"
      - "docs/**"
      - "wheels/**"
  workflow_dispatch:

permissions:
  contents: read

env:
  COVERAGE_CORE: sysmon
  FORCE_COLOR: 1

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        os: [
          "macos-latest",
        ]
        python-version: [
          "3.13",
        ]

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} Python ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v5
      with:
        persist-credentials: false

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
        cache: pip
        cache-dependency-path: |
          ".ci/*.sh"
          "pyproject.toml"

    - name: Set PYTHON_GIL
      if: "${{ matrix.disable-gil }}"
      run: |
        echo "PYTHON_GIL=0" >> $GITHUB_ENV

    - name: Build system information
      run: python3 .github/workflows/system-info.py

    - name: Cache libimagequant
      if: startsWith(matrix.os, 'ubuntu')
      uses: actions/cache@v4
      id: cache-libimagequant
      with:
        path: ~/cache-libimagequant
        key: ${{ runner.os }}-libimagequant-${{ hashFiles('depends/install_imagequant.sh') }}

    - name: Install Linux dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        .ci/install.sh
      env:
        GHA_PYTHON_VERSION: ${{ matrix.python-version }}
        GHA_LIBIMAGEQUANT_CACHE_HIT: ${{ steps.cache-libimagequant.outputs.cache-hit }}

    - name: Install macOS dependencies
      if: startsWith(matrix.os, 'macOS')
      run: |
        .github/workflows/macos-install.sh
      env:
        GHA_PYTHON_VERSION: ${{ matrix.python-version }}

    - name: Build
      run: |
        .ci/build.sh

    - name: Prepare to upload errors
      run: |
        mkdir -p Tests/errors

    - name: Test
      run: |
        if [ $REVERSE ]; then
          python3 -m pip install pytest-reverse
        fi
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          xvfb-run -s '-screen 0 1024x768x24' sway&
          export WAYLAND_DISPLAY=wayland-1
          .ci/test.sh
        else
          .ci/test.sh
        fi
      env:
        PYTHONOPTIMIZE: ${{ matrix.PYTHONOPTIMIZE }}
        REVERSE: ${{ matrix.REVERSE }}

    - name: Upload errors
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: out
        path: Tests/errors
