name: Wheels

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  FORCE_COLOR: 1

jobs:
  windows:
    name: Windows ${{ matrix.cibw_arch }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - cibw_arch: x86
          - cibw_arch: AMD64
          - cibw_arch: ARM64
    steps:
      - uses: actions/checkout@v4

      - name: Checkout extra test images
        uses: actions/checkout@v4
        with:
          repository: python-pillow/test-images
          path: Tests\test-images

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install cibuildwheel
        run: |
          python.exe -m pip install -r .ci/requirements-cibw.txt

      - name: Prepare for build
        run: |
          choco install nasm --no-progress
          echo "C:\Program Files\NASM" >> $env:GITHUB_PATH

          # Install extra test images
          xcopy /S /Y Tests\test-images\* Tests\images

          & python.exe winbuild\build_prepare.py -v --no-imagequant --architecture=${{ matrix.cibw_arch }}
        shell: pwsh

      - name: Build wheels
        run: |
          setlocal EnableDelayedExpansion
          for %%f in (winbuild\build\license\*) do (
            set x=%%~nf
            rem Skip FriBiDi license, it is not included in the wheel.
            set fribidi=!x:~0,7!
            if NOT !fribidi!==fribidi (
              rem Skip imagequant license, it is not included in the wheel.
              set libimagequant=!x:~0,13!
              if NOT !libimagequant!==libimagequant (
                echo. >> LICENSE
                echo ===== %%~nf ===== >> LICENSE
                echo. >> LICENSE
                type %%f >> LICENSE
              )
            )
          )
          call winbuild\\build\\build_env.cmd
          %pythonLocation%\python.exe -m cibuildwheel . --output-dir wheelhouse
        env:
          CIBW_ARCHS: ${{ matrix.cibw_arch }}
          CIBW_BEFORE_ALL: "{package}\\winbuild\\build\\build_dep_all.cmd"
          CIBW_CACHE_PATH: "C:\\cibw"
          CIBW_BUILD: cp38-*
          CIBW_TEST_SKIP: "*-win_arm64"
          CIBW_TEST_COMMAND: 'docker run --rm
            -v {project}:C:\pillow
            -v C:\cibw:C:\cibw
            -v %CD%\..\venv-test:%CD%\..\venv-test
            -e CI -e GITHUB_ACTIONS
            mcr.microsoft.com/windows/servercore:ltsc2022
            powershell C:\pillow\.github\workflows\wheels-test.ps1 %CD%\..\venv-test'
        shell: cmd

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: dist-windows-${{ matrix.cibw_arch }}
          path: ./wheelhouse/*.whl

      - name: Upload fribidi.dll
        uses: actions/upload-artifact@v4
        with:
          name: fribidi-windows-${{ matrix.cibw_arch }}
          path: winbuild\build\bin\fribidi*
